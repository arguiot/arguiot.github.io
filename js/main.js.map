{"version":3,"file":"main.js","sources":["../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../node_modules/rebound/dist/rebound.js","../node_modules/@oberon-amsterdam/horizontal/index.js","entry.js"],"sourcesContent":["'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.rebound = factory());\n}(this, (function () { 'use strict';\n\nvar _onFrame = void 0;\nif (typeof window !== 'undefined') {\n  _onFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;\n}\n\nif (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {\n  _onFrame = setImmediate;\n}\n\n_onFrame = _onFrame || function (callback) {\n  window.setTimeout(callback, 1000 / 60);\n};\n\nvar _onFrame$1 = _onFrame;\n\n/* eslint-disable flowtype/no-weak-types */\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\n// Bind a function to a context object.\nfunction bind(func, context) {\n  for (var _len = arguments.length, outerArgs = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    outerArgs[_key - 2] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, innerArgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      innerArgs[_key2] = arguments[_key2];\n    }\n\n    func.apply(context, concat.call(outerArgs, slice.call(innerArgs)));\n  };\n}\n\n// Add all the properties in the source to the target.\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n\n// Cross browser/node timer functions.\nfunction onFrame(func) {\n  return _onFrame$1(func);\n}\n\n// Lop off the first occurence of the reference in the Array.\nfunction removeFirst(array, item) {\n  var idx = array.indexOf(item);\n  idx !== -1 && array.splice(idx, 1);\n}\n\nvar colorCache = {};\n/**\n * Converts a hex-formatted color string to its rgb-formatted equivalent. Handy\n * when performing color tweening animations\n * @public\n * @param colorString A hex-formatted color string\n * @return An rgb-formatted color string\n */\nfunction hexToRGB(colorString) {\n  if (colorCache[colorString]) {\n    return colorCache[colorString];\n  }\n  var normalizedColor = colorString.replace('#', '');\n  if (normalizedColor.length === 3) {\n    normalizedColor = normalizedColor[0] + normalizedColor[0] + normalizedColor[1] + normalizedColor[1] + normalizedColor[2] + normalizedColor[2];\n  }\n  var parts = normalizedColor.match(/.{2}/g);\n  if (!parts || parts.length < 3) {\n    throw new Error('Expected a color string of format #rrggbb');\n  }\n\n  var ret = {\n    r: parseInt(parts[0], 16),\n    g: parseInt(parts[1], 16),\n    b: parseInt(parts[2], 16)\n  };\n\n  colorCache[colorString] = ret;\n  return ret;\n}\n\n/**\n * Converts a rgb-formatted color string to its hex-formatted equivalent. Handy\n * when performing color tweening animations\n * @public\n * @param colorString An rgb-formatted color string\n * @return A hex-formatted color string\n */\nfunction rgbToHex(rNum, gNum, bNum) {\n  var r = rNum.toString(16);\n  var g = gNum.toString(16);\n  var b = bNum.toString(16);\n  r = r.length < 2 ? '0' + r : r;\n  g = g.length < 2 ? '0' + g : g;\n  b = b.length < 2 ? '0' + b : b;\n  return '#' + r + g + b;\n}\n\nvar util = Object.freeze({\n\tbind: bind,\n\textend: extend,\n\tonFrame: onFrame,\n\tremoveFirst: removeFirst,\n\thexToRGB: hexToRGB,\n\trgbToHex: rgbToHex\n});\n\n/**\n * This helper function does a linear interpolation of a value from\n * one range to another. This can be very useful for converting the\n * motion of a Spring to a range of UI property values. For example a\n * spring moving from position 0 to 1 could be interpolated to move a\n * view from pixel 300 to 350 and scale it from 0.5 to 1. The current\n * position of the `Spring` just needs to be run through this method\n * taking its input range in the _from_ parameters with the property\n * animation range in the _to_ parameters.\n * @public\n */\nfunction mapValueInRange(value, fromLow, fromHigh, toLow, toHigh) {\n  var fromRangeSize = fromHigh - fromLow;\n  var toRangeSize = toHigh - toLow;\n  var valueScale = (value - fromLow) / fromRangeSize;\n  return toLow + valueScale * toRangeSize;\n}\n\n/**\n * Interpolate two hex colors in a 0 - 1 range or optionally provide a\n * custom range with fromLow,fromHight. The output will be in hex by default\n * unless asRGB is true in which case it will be returned as an rgb string.\n *\n * @public\n * @param asRGB Whether to return an rgb-style string\n * @return A string in hex color format unless asRGB is true, in which case a string in rgb format\n */\nfunction interpolateColor(val, startColorStr, endColorStr) {\n  var fromLow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var fromHigh = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var asRGB = arguments[5];\n\n  var startColor = hexToRGB(startColorStr);\n  var endColor = hexToRGB(endColorStr);\n  var r = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));\n  var g = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));\n  var b = Math.floor(mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));\n  if (asRGB) {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else {\n    return rgbToHex(r, g, b);\n  }\n}\n\nfunction degreesToRadians(deg) {\n  return deg * Math.PI / 180;\n}\n\nfunction radiansToDegrees(rad) {\n  return rad * 180 / Math.PI;\n}\n\nvar MathUtil = Object.freeze({\n\tmapValueInRange: mapValueInRange,\n\tinterpolateColor: interpolateColor,\n\tdegreesToRadians: degreesToRadians,\n\tradiansToDegrees: radiansToDegrees\n});\n\n// Math for converting from\n// [Origami](http://facebook.github.io/origami/) to\n// [Rebound](http://facebook.github.io/rebound).\n// You mostly don't need to worry about this, just use\n// SpringConfig.fromOrigamiTensionAndFriction(v, v);\n\nfunction tensionFromOrigamiValue(oValue) {\n  return (oValue - 30.0) * 3.62 + 194.0;\n}\n\nfunction origamiValueFromTension(tension) {\n  return (tension - 194.0) / 3.62 + 30.0;\n}\n\nfunction frictionFromOrigamiValue(oValue) {\n  return (oValue - 8.0) * 3.0 + 25.0;\n}\n\nfunction origamiFromFriction(friction) {\n  return (friction - 25.0) / 3.0 + 8.0;\n}\n\nvar OrigamiValueConverter = Object.freeze({\n\ttensionFromOrigamiValue: tensionFromOrigamiValue,\n\torigamiValueFromTension: origamiValueFromTension,\n\tfrictionFromOrigamiValue: frictionFromOrigamiValue,\n\torigamiFromFriction: origamiFromFriction\n});\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Plays each frame of the SpringSystem on animation\n * timing loop. This is the default type of looper for a new spring system\n * as it is the most common when developing UI.\n * @public\n */\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nvar AnimationLooper = function () {\n  function AnimationLooper() {\n    classCallCheck(this, AnimationLooper);\n    this.springSystem = null;\n  }\n\n  AnimationLooper.prototype.run = function run() {\n    var springSystem = getSpringSystem.call(this);\n\n    onFrame(function () {\n      springSystem.loop(Date.now());\n    });\n  };\n\n  return AnimationLooper;\n}();\n\n/**\n * Resolves the SpringSystem to a resting state in a\n * tight and blocking loop. This is useful for synchronously generating\n * pre-recorded animations that can then be played on a timing loop later.\n * Sometimes this lead to better performance to pre-record a single spring\n * curve and use it to drive many animations; however, it can make dynamic\n * response to user input a bit trickier to implement.\n * @public\n */\nvar SimulationLooper = function () {\n  function SimulationLooper(timestep) {\n    classCallCheck(this, SimulationLooper);\n    this.springSystem = null;\n    this.time = 0;\n    this.running = false;\n\n    this.timestep = timestep || 16.667;\n  }\n\n  SimulationLooper.prototype.run = function run() {\n    var springSystem = getSpringSystem.call(this);\n\n    if (this.running) {\n      return;\n    }\n    this.running = true;\n    while (!springSystem.getIsIdle()) {\n      springSystem.loop(this.time += this.timestep);\n    }\n    this.running = false;\n  };\n\n  return SimulationLooper;\n}();\n\n/**\n * Resolves the SpringSystem one step at a\n * time controlled by an outside loop. This is useful for testing and\n * verifying the behavior of a SpringSystem or if you want to control your own\n * timing loop for some reason e.g. slowing down or speeding up the\n * simulation.\n * @public\n */\nvar SteppingSimulationLooper = function () {\n  function SteppingSimulationLooper() {\n    classCallCheck(this, SteppingSimulationLooper);\n    this.springSystem = null;\n    this.time = 0;\n    this.running = false;\n  }\n\n  SteppingSimulationLooper.prototype.run = function run() {}\n  // this.run is NOOP'd here to allow control from the outside using\n  // this.step.\n\n\n  // Perform one step toward resolving the SpringSystem.\n  ;\n\n  SteppingSimulationLooper.prototype.step = function step(timestep) {\n    var springSystem = getSpringSystem.call(this);\n    springSystem.loop(this.time += timestep);\n  };\n\n  return SteppingSimulationLooper;\n}();\n\nfunction getSpringSystem() {\n  if (this.springSystem == null) {\n    throw new Error('cannot run looper without a springSystem');\n  }\n  return this.springSystem;\n}\n\n\n\nvar Loopers = Object.freeze({\n\tAnimationLooper: AnimationLooper,\n\tSimulationLooper: SimulationLooper,\n\tSteppingSimulationLooper: SteppingSimulationLooper\n});\n\n/**\n * Provides math for converting from Origami PopAnimation\n * config values to regular Origami tension and friction values. If you are\n * trying to replicate prototypes made with PopAnimation patches in Origami,\n * then you should create your springs with\n * SpringSystem.createSpringWithBouncinessAndSpeed, which uses this Math\n * internally to create a spring to match the provided PopAnimation\n * configuration from Origami.\n */\nvar BouncyConversion = function () {\n  function BouncyConversion(bounciness, speed) {\n    classCallCheck(this, BouncyConversion);\n\n    this.bounciness = bounciness;\n    this.speed = speed;\n\n    var b = this.normalize(bounciness / 1.7, 0, 20.0);\n    b = this.projectNormal(b, 0.0, 0.8);\n    var s = this.normalize(speed / 1.7, 0, 20.0);\n\n    this.bouncyTension = this.projectNormal(s, 0.5, 200);\n    this.bouncyFriction = this.quadraticOutInterpolation(b, this.b3Nobounce(this.bouncyTension), 0.01);\n  }\n\n  BouncyConversion.prototype.normalize = function normalize(value, startValue, endValue) {\n    return (value - startValue) / (endValue - startValue);\n  };\n\n  BouncyConversion.prototype.projectNormal = function projectNormal(n, start, end) {\n    return start + n * (end - start);\n  };\n\n  BouncyConversion.prototype.linearInterpolation = function linearInterpolation(t, start, end) {\n    return t * end + (1.0 - t) * start;\n  };\n\n  BouncyConversion.prototype.quadraticOutInterpolation = function quadraticOutInterpolation(t, start, end) {\n    return this.linearInterpolation(2 * t - t * t, start, end);\n  };\n\n  BouncyConversion.prototype.b3Friction1 = function b3Friction1(x) {\n    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n  };\n\n  BouncyConversion.prototype.b3Friction2 = function b3Friction2(x) {\n    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;\n  };\n\n  BouncyConversion.prototype.b3Friction3 = function b3Friction3(x) {\n    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;\n  };\n\n  BouncyConversion.prototype.b3Nobounce = function b3Nobounce(tension) {\n    var friction = 0;\n    if (tension <= 18) {\n      friction = this.b3Friction1(tension);\n    } else if (tension > 18 && tension <= 44) {\n      friction = this.b3Friction2(tension);\n    } else {\n      friction = this.b3Friction3(tension);\n    }\n    return friction;\n  };\n\n  return BouncyConversion;\n}();\n\n/**\n * Maintains a set of tension and friction constants\n * for a Spring. You can use fromOrigamiTensionAndFriction to convert\n * values from the [Origami](http://facebook.github.io/origami/)\n * design tool directly to Rebound spring constants.\n * @public\n */\n\nvar SpringConfig = function () {\n\n  /**\n   * Convert an origami Spring tension and friction to Rebound spring\n   * constants. If you are prototyping a design with Origami, this\n   * makes it easy to make your springs behave exactly the same in\n   * Rebound.\n   * @public\n   */\n  SpringConfig.fromOrigamiTensionAndFriction = function fromOrigamiTensionAndFriction(tension, friction) {\n    return new SpringConfig(tensionFromOrigamiValue(tension), frictionFromOrigamiValue(friction));\n  };\n\n  /**\n   * Convert an origami PopAnimation Spring bounciness and speed to Rebound\n   * spring constants. If you are using PopAnimation patches in Origami, this\n   * utility will provide springs that match your prototype.\n   * @public\n   */\n\n\n  SpringConfig.fromBouncinessAndSpeed = function fromBouncinessAndSpeed(bounciness, speed) {\n    var bouncyConversion = new BouncyConversion(bounciness, speed);\n    return SpringConfig.fromOrigamiTensionAndFriction(bouncyConversion.bouncyTension, bouncyConversion.bouncyFriction);\n  };\n\n  /**\n   * Create a SpringConfig with no tension or a coasting spring with some\n   * amount of Friction so that it does not coast infininitely.\n   * @public\n   */\n\n\n  SpringConfig.coastingConfigWithOrigamiFriction = function coastingConfigWithOrigamiFriction(friction) {\n    return new SpringConfig(0, frictionFromOrigamiValue(friction));\n  };\n\n  function SpringConfig(tension, friction) {\n    classCallCheck(this, SpringConfig);\n\n    this.tension = tension;\n    this.friction = friction;\n  }\n\n  return SpringConfig;\n}();\n\nSpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = SpringConfig.fromOrigamiTensionAndFriction(40, 7);\n\n/**\n * Consists of a position and velocity. A Spring uses\n * this internally to keep track of its current and prior position and\n * velocity values.\n */\nvar PhysicsState = function PhysicsState() {\n  classCallCheck(this, PhysicsState);\n  this.position = 0;\n  this.velocity = 0;\n};\n\n/**\n * Provides a model of a classical spring acting to\n * resolve a body to equilibrium. Springs have configurable\n * tension which is a force multipler on the displacement of the\n * spring from its rest point or `endValue` as defined by [Hooke's\n * law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n * configurable friction, which ensures that they do not oscillate\n * infinitely. When a Spring is displaced by updating it's resting\n * or `currentValue`, the SpringSystems that contain that Spring\n * will automatically start looping to solve for equilibrium. As each\n * timestep passes, `SpringListener` objects attached to the Spring\n * will be notified of the updates providing a way to drive an\n * animation off of the spring's resolution curve.\n * @public\n */\n\nvar Spring = function () {\n  function Spring(springSystem) {\n    classCallCheck(this, Spring);\n    this.listeners = [];\n    this._startValue = 0;\n    this._currentState = new PhysicsState();\n    this._displacementFromRestThreshold = 0.001;\n    this._endValue = 0;\n    this._overshootClampingEnabled = false;\n    this._previousState = new PhysicsState();\n    this._restSpeedThreshold = 0.001;\n    this._tempState = new PhysicsState();\n    this._timeAccumulator = 0;\n    this._wasAtRest = true;\n\n    this._id = 's' + Spring._ID++;\n    this._springSystem = springSystem;\n  }\n\n  /**\n   * Remove a Spring from simulation and clear its listeners.\n   * @public\n   */\n\n\n  Spring.prototype.destroy = function destroy() {\n    this.listeners = [];\n    this._springSystem.deregisterSpring(this);\n  };\n\n  /**\n   * Get the id of the spring, which can be used to retrieve it from\n   * the SpringSystems it participates in later.\n   * @public\n   */\n\n\n  Spring.prototype.getId = function getId() {\n    return this._id;\n  };\n\n  /**\n   * Set the configuration values for this Spring. A SpringConfig\n   * contains the tension and friction values used to solve for the\n   * equilibrium of the Spring in the physics loop.\n   * @public\n   */\n\n\n  Spring.prototype.setSpringConfig = function setSpringConfig(springConfig) {\n    this._springConfig = springConfig;\n    return this;\n  };\n\n  /**\n   * Retrieve the SpringConfig used by this Spring.\n   * @public\n   */\n\n\n  Spring.prototype.getSpringConfig = function getSpringConfig() {\n    return this._springConfig;\n  };\n\n  /**\n   * Set the current position of this Spring. Listeners will be updated\n   * with this value immediately. If the rest or `endValue` is not\n   * updated to match this value, then the spring will be dispalced and\n   * the SpringSystem will start to loop to restore the spring to the\n   * `endValue`.\n   *\n   * A common pattern is to move a Spring around without animation by\n   * calling.\n   *\n   * ```\n   * spring.setCurrentValue(n).setAtRest();\n   * ```\n   *\n   * This moves the Spring to a new position `n`, sets the endValue\n   * to `n`, and removes any velocity from the `Spring`. By doing\n   * this you can allow the `SpringListener` to manage the position\n   * of UI elements attached to the spring even when moving without\n   * animation. For example, when dragging an element you can\n   * update the position of an attached view through a spring\n   * by calling `spring.setCurrentValue(x)`. When\n   * the gesture ends you can update the Springs\n   * velocity and endValue\n   * `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`\n   * to cause it to naturally animate the UI element to the resting\n   * position taking into account existing velocity. The codepaths for\n   * synchronous movement and spring driven animation can\n   * be unified using this technique.\n   * @public\n   */\n\n\n  Spring.prototype.setCurrentValue = function setCurrentValue(currentValue, skipSetAtRest) {\n    this._startValue = currentValue;\n    this._currentState.position = currentValue;\n    if (!skipSetAtRest) {\n      this.setAtRest();\n    }\n    this.notifyPositionUpdated(false, false);\n    return this;\n  };\n\n  /**\n   * Get the position that the most recent animation started at. This\n   * can be useful for determining the number off oscillations that\n   * have occurred.\n   * @public\n   */\n\n\n  Spring.prototype.getStartValue = function getStartValue() {\n    return this._startValue;\n  };\n\n  /**\n   * Retrieve the current value of the Spring.\n   * @public\n   */\n\n\n  Spring.prototype.getCurrentValue = function getCurrentValue() {\n    return this._currentState.position;\n  };\n\n  /**\n   * Get the absolute distance of the Spring from its resting endValue\n   * position.\n   * @public\n   */\n\n\n  Spring.prototype.getCurrentDisplacementDistance = function getCurrentDisplacementDistance() {\n    return this.getDisplacementDistanceForState(this._currentState);\n  };\n\n  /**\n   * Get the absolute distance of the Spring from a given state value\n   */\n\n\n  Spring.prototype.getDisplacementDistanceForState = function getDisplacementDistanceForState(state) {\n    return Math.abs(this._endValue - state.position);\n  };\n\n  /**\n   * Set the endValue or resting position of the spring. If this\n   * value is different than the current value, the SpringSystem will\n   * be notified and will begin running its solver loop to resolve\n   * the Spring to equilibrium. Any listeners that are registered\n   * for onSpringEndStateChange will also be notified of this update\n   * immediately.\n   * @public\n   */\n\n\n  Spring.prototype.setEndValue = function setEndValue(endValue) {\n    if (this._endValue === endValue && this.isAtRest()) {\n      return this;\n    }\n    this._startValue = this.getCurrentValue();\n    this._endValue = endValue;\n    this._springSystem.activateSpring(this.getId());\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i];\n      var onChange = listener.onSpringEndStateChange;\n      onChange && onChange(this);\n    }\n    return this;\n  };\n\n  /**\n   * Retrieve the endValue or resting position of this spring.\n   * @public\n   */\n\n\n  Spring.prototype.getEndValue = function getEndValue() {\n    return this._endValue;\n  };\n\n  /**\n   * Set the current velocity of the Spring, in pixels per second. As\n   * previously mentioned, this can be useful when you are performing\n   * a direct manipulation gesture. When a UI element is released you\n   * may call setVelocity on its animation Spring so that the Spring\n   * continues with the same velocity as the gesture ended with. The\n   * friction, tension, and displacement of the Spring will then\n   * govern its motion to return to rest on a natural feeling curve.\n   * @public\n   */\n\n\n  Spring.prototype.setVelocity = function setVelocity(velocity) {\n    if (velocity === this._currentState.velocity) {\n      return this;\n    }\n    this._currentState.velocity = velocity;\n    this._springSystem.activateSpring(this.getId());\n    return this;\n  };\n\n  /**\n   * Get the current velocity of the Spring, in pixels per second.\n   * @public\n   */\n\n\n  Spring.prototype.getVelocity = function getVelocity() {\n    return this._currentState.velocity;\n  };\n\n  /**\n   * Set a threshold value for the movement speed of the Spring below\n   * which it will be considered to be not moving or resting.\n   * @public\n   */\n\n\n  Spring.prototype.setRestSpeedThreshold = function setRestSpeedThreshold(restSpeedThreshold) {\n    this._restSpeedThreshold = restSpeedThreshold;\n    return this;\n  };\n\n  /**\n   * Retrieve the rest speed threshold for this Spring.\n   * @public\n   */\n\n\n  Spring.prototype.getRestSpeedThreshold = function getRestSpeedThreshold() {\n    return this._restSpeedThreshold;\n  };\n\n  /**\n   * Set a threshold value for displacement below which the Spring\n   * will be considered to be not displaced i.e. at its resting\n   * `endValue`.\n   * @public\n   */\n\n\n  Spring.prototype.setRestDisplacementThreshold = function setRestDisplacementThreshold(displacementFromRestThreshold) {\n    this._displacementFromRestThreshold = displacementFromRestThreshold;\n  };\n\n  /**\n   * Retrieve the rest displacement threshold for this spring.\n   * @public\n   */\n\n\n  Spring.prototype.getRestDisplacementThreshold = function getRestDisplacementThreshold() {\n    return this._displacementFromRestThreshold;\n  };\n\n  /**\n   * Enable overshoot clamping. This means that the Spring will stop\n   * immediately when it reaches its resting position regardless of\n   * any existing momentum it may have. This can be useful for certain\n   * types of animations that should not oscillate such as a scale\n   * down to 0 or alpha fade.\n   * @public\n   */\n\n\n  Spring.prototype.setOvershootClampingEnabled = function setOvershootClampingEnabled(enabled) {\n    this._overshootClampingEnabled = enabled;\n    return this;\n  };\n\n  /**\n   * Check if overshoot clamping is enabled for this spring.\n   * @public\n   */\n\n\n  Spring.prototype.isOvershootClampingEnabled = function isOvershootClampingEnabled() {\n    return this._overshootClampingEnabled;\n  };\n\n  /**\n   * Check if the Spring has gone past its end point by comparing\n   * the direction it was moving in when it started to the current\n   * position and end value.\n   * @public\n   */\n\n\n  Spring.prototype.isOvershooting = function isOvershooting() {\n    var start = this._startValue;\n    var end = this._endValue;\n    return this._springConfig.tension > 0 && (start < end && this.getCurrentValue() > end || start > end && this.getCurrentValue() < end);\n  };\n\n  /**\n   * The main solver method for the Spring. It takes\n   * the current time and delta since the last time step and performs\n   * an RK4 integration to get the new position and velocity state\n   * for the Spring based on the tension, friction, velocity, and\n   * displacement of the Spring.\n   * @public\n   */\n\n\n  Spring.prototype.advance = function advance(time, realDeltaTime) {\n    var isAtRest = this.isAtRest();\n\n    if (isAtRest && this._wasAtRest) {\n      return;\n    }\n\n    var adjustedDeltaTime = realDeltaTime;\n    if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {\n      adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;\n    }\n\n    this._timeAccumulator += adjustedDeltaTime;\n\n    var tension = this._springConfig.tension;\n    var friction = this._springConfig.friction;\n    var position = this._currentState.position;\n    var velocity = this._currentState.velocity;\n    var tempPosition = this._tempState.position;\n    var tempVelocity = this._tempState.velocity;\n    var aVelocity = void 0;\n    var aAcceleration = void 0;\n    var bVelocity = void 0;\n    var bAcceleration = void 0;\n    var cVelocity = void 0;\n    var cAcceleration = void 0;\n    var dVelocity = void 0;\n    var dAcceleration = void 0;\n    var dxdt = void 0;\n    var dvdt = void 0;\n\n    while (this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {\n      this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;\n\n      if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {\n        this._previousState.position = position;\n        this._previousState.velocity = velocity;\n      }\n\n      aVelocity = velocity;\n      aAcceleration = tension * (this._endValue - tempPosition) - friction * velocity;\n\n      tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      tempVelocity = velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      bVelocity = tempVelocity;\n      bAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      tempVelocity = velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n      cVelocity = tempVelocity;\n      cAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC;\n      tempVelocity = velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC;\n      dVelocity = tempVelocity;\n      dAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\n\n      dxdt = 1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);\n      dvdt = 1.0 / 6.0 * (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);\n\n      position += dxdt * Spring.SOLVER_TIMESTEP_SEC;\n      velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;\n    }\n\n    this._tempState.position = tempPosition;\n    this._tempState.velocity = tempVelocity;\n\n    this._currentState.position = position;\n    this._currentState.velocity = velocity;\n\n    if (this._timeAccumulator > 0) {\n      this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);\n    }\n\n    if (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) {\n      if (this._springConfig.tension > 0) {\n        this._startValue = this._endValue;\n        this._currentState.position = this._endValue;\n      } else {\n        this._endValue = this._currentState.position;\n        this._startValue = this._endValue;\n      }\n      this.setVelocity(0);\n      isAtRest = true;\n    }\n\n    var notifyActivate = false;\n    if (this._wasAtRest) {\n      this._wasAtRest = false;\n      notifyActivate = true;\n    }\n\n    var notifyAtRest = false;\n    if (isAtRest) {\n      this._wasAtRest = true;\n      notifyAtRest = true;\n    }\n\n    this.notifyPositionUpdated(notifyActivate, notifyAtRest);\n  };\n\n  Spring.prototype.notifyPositionUpdated = function notifyPositionUpdated(notifyActivate, notifyAtRest) {\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i];\n      if (notifyActivate && listener.onSpringActivate) {\n        listener.onSpringActivate(this);\n      }\n\n      if (listener.onSpringUpdate) {\n        listener.onSpringUpdate(this);\n      }\n\n      if (notifyAtRest && listener.onSpringAtRest) {\n        listener.onSpringAtRest(this);\n      }\n    }\n  };\n\n  /**\n   * Check if the SpringSystem should advance. Springs are advanced\n   * a final frame after they reach equilibrium to ensure that the\n   * currentValue is exactly the requested endValue regardless of the\n   * displacement threshold.\n   * @public\n   */\n\n\n  Spring.prototype.systemShouldAdvance = function systemShouldAdvance() {\n    return !this.isAtRest() || !this.wasAtRest();\n  };\n\n  Spring.prototype.wasAtRest = function wasAtRest() {\n    return this._wasAtRest;\n  };\n\n  /**\n   * Check if the Spring is atRest meaning that it's currentValue and\n   * endValue are the same and that it has no velocity. The previously\n   * described thresholds for speed and displacement define the bounds\n   * of this equivalence check. If the Spring has 0 tension, then it will\n   * be considered at rest whenever its absolute velocity drops below the\n   * restSpeedThreshold.\n   * @public\n   */\n\n\n  Spring.prototype.isAtRest = function isAtRest() {\n    return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || this._springConfig.tension === 0);\n  };\n\n  /**\n   * Force the spring to be at rest at its current position. As\n   * described in the documentation for setCurrentValue, this method\n   * makes it easy to do synchronous non-animated updates to ui\n   * elements that are attached to springs via SpringListeners.\n   * @public\n   */\n\n\n  Spring.prototype.setAtRest = function setAtRest() {\n    this._endValue = this._currentState.position;\n    this._tempState.position = this._currentState.position;\n    this._currentState.velocity = 0;\n    return this;\n  };\n\n  Spring.prototype._interpolate = function _interpolate(alpha) {\n    this._currentState.position = this._currentState.position * alpha + this._previousState.position * (1 - alpha);\n    this._currentState.velocity = this._currentState.velocity * alpha + this._previousState.velocity * (1 - alpha);\n  };\n\n  Spring.prototype.getListeners = function getListeners() {\n    return this.listeners;\n  };\n\n  Spring.prototype.addListener = function addListener(newListener) {\n    this.listeners.push(newListener);\n    return this;\n  };\n\n  Spring.prototype.removeListener = function removeListener(listenerToRemove) {\n    removeFirst(this.listeners, listenerToRemove);\n    return this;\n  };\n\n  Spring.prototype.removeAllListeners = function removeAllListeners() {\n    this.listeners = [];\n    return this;\n  };\n\n  Spring.prototype.currentValueIsApproximately = function currentValueIsApproximately(value) {\n    return Math.abs(this.getCurrentValue() - value) <= this.getRestDisplacementThreshold();\n  };\n\n  return Spring;\n}();\n\nSpring._ID = 0;\nSpring.MAX_DELTA_TIME_SEC = 0.064;\nSpring.SOLVER_TIMESTEP_SEC = 0.001;\n\n/**\n * A set of Springs that all run on the same physics\n * timing loop. To get started with a Rebound animation, first\n * create a new SpringSystem and then add springs to it.\n * @public\n */\n\nvar SpringSystem = function () {\n  function SpringSystem(looper) {\n    classCallCheck(this, SpringSystem);\n    this.listeners = [];\n    this._activeSprings = [];\n    this._idleSpringIndices = [];\n    this._isIdle = true;\n    this._lastTimeMillis = -1;\n    this._springRegistry = {};\n\n    this.looper = looper || new AnimationLooper();\n    this.looper.springSystem = this;\n  }\n\n  /**\n   * A SpringSystem is iterated by a looper. The looper is responsible\n   * for executing each frame as the SpringSystem is resolved to idle.\n   * There are three types of Loopers described below AnimationLooper,\n   * SimulationLooper, and SteppingSimulationLooper. AnimationLooper is\n   * the default as it is the most useful for common UI animations.\n   * @public\n   */\n\n\n  SpringSystem.prototype.setLooper = function setLooper(looper) {\n    this.looper = looper;\n    looper.springSystem = this;\n  };\n\n  /**\n   * Add a new spring to this SpringSystem. This Spring will now be solved for\n   * during the physics iteration loop. By default the spring will use the\n   * default Origami spring config with 40 tension and 7 friction, but you can\n   * also provide your own values here.\n   * @public\n   */\n\n\n  SpringSystem.prototype.createSpring = function createSpring(tension, friction) {\n    var springConfig = void 0;\n    if (tension === undefined || friction === undefined) {\n      springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n    } else {\n      springConfig = SpringConfig.fromOrigamiTensionAndFriction(tension, friction);\n    }\n    return this.createSpringWithConfig(springConfig);\n  };\n\n  /**\n   * Add a spring with a specified bounciness and speed. To replicate Origami\n   * compositions based on PopAnimation patches, use this factory method to\n   * create matching springs.\n   * @public\n   */\n\n\n  SpringSystem.prototype.createSpringWithBouncinessAndSpeed = function createSpringWithBouncinessAndSpeed(bounciness, speed) {\n    var springConfig = void 0;\n    if (bounciness === undefined || speed === undefined) {\n      springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n    } else {\n      springConfig = SpringConfig.fromBouncinessAndSpeed(bounciness, speed);\n    }\n    return this.createSpringWithConfig(springConfig);\n  };\n\n  /**\n   * Add a spring with the provided SpringConfig.\n   * @public\n   */\n\n\n  SpringSystem.prototype.createSpringWithConfig = function createSpringWithConfig(springConfig) {\n    var spring = new Spring(this);\n    this.registerSpring(spring);\n    spring.setSpringConfig(springConfig);\n    return spring;\n  };\n\n  /**\n   * Check if a SpringSystem is idle or active. If all of the Springs in the\n   * SpringSystem are at rest, i.e. the physics forces have reached equilibrium,\n   * then this method will return true.\n   * @public\n   */\n\n\n  SpringSystem.prototype.getIsIdle = function getIsIdle() {\n    return this._isIdle;\n  };\n\n  /**\n   * Retrieve a specific Spring from the SpringSystem by id. This\n   * can be useful for inspecting the state of a spring before\n   * or after an integration loop in the SpringSystem executes.\n   * @public\n   */\n\n\n  SpringSystem.prototype.getSpringById = function getSpringById(id) {\n    return this._springRegistry[id];\n  };\n\n  /**\n   * Get a listing of all the springs registered with this\n   * SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.getAllSprings = function getAllSprings() {\n    var vals = [];\n    for (var _id in this._springRegistry) {\n      if (this._springRegistry.hasOwnProperty(_id)) {\n        vals.push(this._springRegistry[_id]);\n      }\n    }\n    return vals;\n  };\n\n  /**\n   * Manually add a spring to this system. This is called automatically\n   * if a Spring is created with SpringSystem#createSpring.\n   *\n   * This method sets the spring up in the registry so that it can be solved\n   * in the solver loop.\n   * @public\n   */\n\n\n  SpringSystem.prototype.registerSpring = function registerSpring(spring) {\n    this._springRegistry[spring.getId()] = spring;\n  };\n\n  /**\n   * Deregister a spring with this SpringSystem. The SpringSystem will\n   * no longer consider this Spring during its integration loop once\n   * this is called. This is normally done automatically for you when\n   * you call Spring#destroy.\n   * @public\n   */\n\n\n  SpringSystem.prototype.deregisterSpring = function deregisterSpring(spring) {\n    removeFirst(this._activeSprings, spring);\n    delete this._springRegistry[spring.getId()];\n  };\n\n  SpringSystem.prototype.advance = function advance(time, deltaTime) {\n    while (this._idleSpringIndices.length > 0) {\n      this._idleSpringIndices.pop();\n    }\n    for (var i = 0, len = this._activeSprings.length; i < len; i++) {\n      var spring = this._activeSprings[i];\n      if (spring.systemShouldAdvance()) {\n        spring.advance(time / 1000.0, deltaTime / 1000.0);\n      } else {\n        this._idleSpringIndices.push(this._activeSprings.indexOf(spring));\n      }\n    }\n    while (this._idleSpringIndices.length > 0) {\n      var idx = this._idleSpringIndices.pop();\n      idx >= 0 && this._activeSprings.splice(idx, 1);\n    }\n  };\n\n  /**\n   * This is the main solver loop called to move the simulation\n   * forward through time. Before each pass in the solver loop\n   * onBeforeIntegrate is called on an any listeners that have\n   * registered themeselves with the SpringSystem. This gives you\n   * an opportunity to apply any constraints or adjustments to\n   * the springs that should be enforced before each iteration\n   * loop. Next the advance method is called to move each Spring in\n   * the systemShouldAdvance forward to the current time. After the\n   * integration step runs in advance, onAfterIntegrate is called\n   * on any listeners that have registered themselves with the\n   * SpringSystem. This gives you an opportunity to run any post\n   * integration constraints or adjustments on the Springs in the\n   * SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.loop = function loop(currentTimeMillis) {\n    var listener = void 0;\n    if (this._lastTimeMillis === -1) {\n      this._lastTimeMillis = currentTimeMillis - 1;\n    }\n    var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;\n    this._lastTimeMillis = currentTimeMillis;\n\n    var i = 0;\n    var len = this.listeners.length;\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i];\n      listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);\n    }\n\n    this.advance(currentTimeMillis, ellapsedMillis);\n    if (this._activeSprings.length === 0) {\n      this._isIdle = true;\n      this._lastTimeMillis = -1;\n    }\n\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i];\n      listener.onAfterIntegrate && listener.onAfterIntegrate(this);\n    }\n\n    if (!this._isIdle) {\n      this.looper.run();\n    }\n  };\n\n  /**\n   * Used to notify the SpringSystem that a Spring has become displaced.\n   * The system responds by starting its solver loop up if it is currently idle.\n   */\n\n\n  SpringSystem.prototype.activateSpring = function activateSpring(springId) {\n    var spring = this._springRegistry[springId];\n    if (this._activeSprings.indexOf(spring) === -1) {\n      this._activeSprings.push(spring);\n    }\n    if (this.getIsIdle()) {\n      this._isIdle = false;\n      this.looper.run();\n    }\n  };\n\n  /**\n   * Add a listener to the SpringSystem to receive before/after integration\n   * notifications allowing Springs to be constrained or adjusted.\n   * @public\n   */\n\n\n  SpringSystem.prototype.addListener = function addListener(listener) {\n    this.listeners.push(listener);\n  };\n\n  /**\n   * Remove a previously added listener on the SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.removeListener = function removeListener(listener) {\n    removeFirst(this.listeners, listener);\n  };\n\n  /**\n   * Remove all previously added listeners on the SpringSystem.\n   * @public\n   */\n\n\n  SpringSystem.prototype.removeAllListeners = function removeAllListeners() {\n    this.listeners = [];\n  };\n\n  return SpringSystem;\n}();\n\nvar index = _extends({}, Loopers, {\n  OrigamiValueConverter: OrigamiValueConverter,\n  MathUtil: MathUtil,\n  Spring: Spring,\n  SpringConfig: SpringConfig,\n  SpringSystem: SpringSystem,\n  util: _extends({}, util, MathUtil)\n});\n\nreturn index;\n\n})));\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = require(\"events\");\nvar rebound_1 = require(\"rebound\");\nvar SCROLL_AMOUNT = 100;\nvar SCROLL_AMOUNT_STEP = SCROLL_AMOUNT * 10;\nvar HorizontalScroll = /** @class */ (function (_super) {\n    __extends(HorizontalScroll, _super);\n    /**\n     * Initialize a new horizontal scroll instance.\n     * Will immediately bind to container.\n     *\n     */\n    function HorizontalScroll(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.scrollAmount, scrollAmount = _c === void 0 ? SCROLL_AMOUNT : _c, _d = _b.scrollAmountStep, scrollAmountStep = _d === void 0 ? SCROLL_AMOUNT_STEP : _d, _e = _b.container, container = _e === void 0 ? document.documentElement : _e, _f = _b.showScrollbars, showScrollbars = _f === void 0 ? false : _f, _g = _b.preventVerticalScroll, preventVerticalScroll = _g === void 0 ? false : _g;\n        var _this = _super.call(this) || this;\n        _this.observer = null;\n        _this.containerIsIntersecting = false;\n        _this.style = null;\n        _this.cssClass = \"__horizontal-container-\" + Math.round(Math.random() * 100000);\n        _this.preventVerticalScroll = false;\n        // ignore keydown events when any of these elements are focused\n        _this.blacklist = ['input', 'select', 'textarea'];\n        _this.wheel = function (e) {\n            e.preventDefault();\n            var angle = Math.atan2(e.deltaY, e.deltaX) / Math.PI;\n            var forward = !(angle < 0.675 && angle > -0.375);\n            var offset = Math.sqrt(Math.pow(e.deltaX, 2) + Math.pow(e.deltaY, 2));\n            if (_this.preventVerticalScroll) {\n                return;\n            }\n            switch (e.deltaMode) {\n                case WheelEvent.DOM_DELTA_LINE:\n                    offset *= SCROLL_AMOUNT;\n                    break;\n                case WheelEvent.DOM_DELTA_PAGE:\n                    offset *= SCROLL_AMOUNT_STEP;\n                    break;\n                default:\n                    break;\n            }\n            if (forward) {\n                offset *= -1;\n            }\n            var distance = Math.max(_this.container.scrollLeft + offset, 0);\n            if (distance < _this.container.scrollWidth - _this.container.clientWidth) {\n                if (e.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                    // force spring to new value & don't animate\n                    _this.spring.setCurrentValue(distance);\n                }\n                else {\n                    _this.spring.setEndValue(distance);\n                }\n            }\n        };\n        _this.keydown = function (e) {\n            // only listen to key events if the container actually is in view\n            if (_this.observer && !_this.containerIsIntersecting) {\n                return;\n            }\n            var target = e.target;\n            // if any blacklisted elements are focused, we'll won't handle this keydown.\n            if (target &&\n                target !== document.body &&\n                _this.blacklist.includes(target.nodeName.toLowerCase())) {\n                return;\n            }\n            var scrollValue = _this.container.scrollLeft;\n            var max = _this.container.scrollWidth - _this.container.clientWidth;\n            var prevent = true;\n            switch (e.code) {\n                case 'Home':\n                    scrollValue = 0;\n                    break;\n                case 'End':\n                    scrollValue = max;\n                    break;\n                case 'ArrowUp':\n                    if (_this.preventVerticalScroll) {\n                        prevent = true;\n                        break;\n                    }\n                    else {\n                        scrollValue -= SCROLL_AMOUNT;\n                        break;\n                    }\n                case 'ArrowDown':\n                    if (_this.preventVerticalScroll) {\n                        prevent = true;\n                        break;\n                    }\n                    else {\n                        scrollValue += SCROLL_AMOUNT;\n                        break;\n                    }\n                case 'ArrowLeft':\n                    scrollValue -= SCROLL_AMOUNT;\n                    break;\n                case 'ArrowRight':\n                    scrollValue += SCROLL_AMOUNT;\n                    break;\n                case 'PageUp':\n                    scrollValue -= SCROLL_AMOUNT_STEP;\n                    break;\n                case 'PageDown':\n                case 'Space':\n                    scrollValue += SCROLL_AMOUNT_STEP;\n                    break;\n                default:\n                    prevent = false;\n                    break;\n            }\n            // correct scroll value if it's out of bounds\n            scrollValue = Math.max(scrollValue, 0);\n            scrollValue = Math.min(scrollValue, max);\n            // if nothing changed, do nothing\n            if (scrollValue === _this.spring.getEndValue()) {\n                return;\n            }\n            if (prevent) {\n                e.preventDefault();\n            }\n            if (_this.spring) {\n                if (_this.spring.isAtRest()) {\n                    _this.spring.setCurrentValue(_this.container.scrollLeft);\n                }\n                _this.spring.setEndValue(scrollValue);\n            }\n        };\n        if (typeof container === 'undefined') {\n            return _this;\n        }\n        _this.preventVerticalScroll = preventVerticalScroll;\n        // bind events\n        _this.container = container;\n        _this.container.addEventListener('wheel', _this.wheel);\n        document.addEventListener('keydown', _this.keydown);\n        // set up interaction observer\n        if (_this.container !== document.documentElement) {\n            if ('IntersectionObserver' in window) {\n                _this.observer = new IntersectionObserver(function (_a) {\n                    var _b = __read(_a, 1), entry = _b[0];\n                    _this.containerIsIntersecting = entry.isIntersecting;\n                });\n                _this.observer.observe(_this.container);\n            }\n            else {\n                // tslint:disable-next-line:no-console\n                console.warn('[horizontal-scroll] WARN: IntersectionObserver not available, assuming key navigation is always applicable to your container.');\n            }\n        }\n        // add CSS to hide scrollbars\n        if (!showScrollbars) {\n            _this.container.classList.add(_this.cssClass);\n            _this.style = document.createElement('style');\n            document.head.appendChild(_this.style);\n            var sheet = _this.style.sheet;\n            if (sheet) {\n                sheet.insertRule(\"\\n                        .\" + _this.cssClass + \" {\\n                            overflow-y: hidden;\\n                            overflow-x: auto;\\n\\n                            /* prevents unwanted gestures and bounce effects */\\n                            overscroll-behavior: auto;\\n\\n                            /* vendor specific hacks to hide scrollbars */\\n                            scrollbar-width: none;\\n                            -ms-overflow-style: none;\\n                        }\\n                    \");\n                var webkitCss = \"::-webkit-scrollbar { display: none; }\";\n                if (_this.container !== document.documentElement) {\n                    webkitCss = \".\" + _this.cssClass + webkitCss;\n                }\n                sheet.insertRule(webkitCss);\n            }\n        }\n        // init spring\n        _this.springSystem = new rebound_1.SpringSystem();\n        _this.spring = _this.springSystem.createSpring();\n        _this.spring.setCurrentValue(_this.container.scrollLeft);\n        _this.spring.setOvershootClampingEnabled(true);\n        _this.spring.addListener({\n            onSpringUpdate: function (currSpring) {\n                var value = currSpring.getCurrentValue();\n                _this.emit('scroll', value);\n                // disallow gestures on the vertical axis. also disallow on horizontal when we've scrolled\n                _this.container.style.overscrollBehaviorY = 'none';\n                _this.container.style.overscrollBehaviorX = value > 0 ? 'none' : 'auto';\n                _this.container.scrollLeft = value;\n            },\n        });\n        _this.spring.notifyPositionUpdated();\n        return _this;\n    }\n    HorizontalScroll.prototype.destroy = function () {\n        if (typeof this.container === 'undefined') {\n            return;\n        }\n        this.container.removeEventListener('wheel', this.wheel);\n        document.removeEventListener('keydown', this.keydown);\n        if (this.style) {\n            this.style.remove();\n        }\n        this.container.classList.remove(this.cssClass);\n        this.spring.destroy();\n        this.springSystem.removeAllListeners();\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    };\n    return HorizontalScroll;\n}(events_1.EventEmitter));\nexports.default = HorizontalScroll;\n//# sourceMappingURL=index.js.map","import HorizontalScroll from '@oberon-amsterdam/horizontal';\n\nclass Main {\n\tconstructor() {\n\t\tthis.setupUI()\n\t}\n\n\tsetupUI() {\n\t\tif (matchMedia) {\n\t\t\tconst mq = window.matchMedia(\"(max-width: 600px)\")\n\t\t\tconst handler = this.widthChange.bind(this)\n\t\t\ttry {\n\t\t\t\t// Chrome & Firefox\n\t\t\t\tmq.addEventListener('change', handler);\n\t\t\t} catch (e1) {\n\t\t\t\ttry {\n\t\t\t\t\t// Safari\n\t\t\t\t\tmq.addListener(handler);\n\t\t\t\t} catch (e2) {\n\t\t\t\t\tconsole.error(e2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.widthChange(mq)\n\t\t} else {\n\t\t\tthis.largeWindow()\n\t\t}\n\t}\n\n\twidthChange(mq) {\n\t\tif (mq.matches) {\n\t\t\tthis.smallWindow()\n\t\t} else {\n\t\t\tthis.largeWindow()\n\t\t}\n\t}\n\tsmallWindow() {\n\t\tif (typeof this.horizontal != \"undefined\") {\n\t\t\tthis.horizontal.destroy()\n\t\t}\n\t}\n\n\tlargeWindow() {\n\t\tthis.horizontal = new HorizontalScroll({\n\t\t\tshowScrollbars: true,\n\t\t});\n\t}\n}\n\nconst m = new Main()\n\nexport default m"],"names":["EventHandlers","EventEmitter","init","call","this","$getMaxListeners","that","undefined","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","_addListener","target","type","listener","prepend","m","events","existing","e","TypeError","_events","newListener","emit","_eventsCount","unshift","push","warned","w","Error","name","emitter","count","console","warn","log","_onceWrap","fired","g","removeListener","arguments","listenerCount","evlistener","arr","copy","Array","prototype","Object","create","usingDomains","domain","active","getPrototypeOf","setMaxListeners","n","isNaN","getMaxListeners","er","doError","error","err","context","domainEmitter","domainThrown","addListener","on","prependListener","once","prependOnceListener","list","position","originalListener","index","k","pop","spliceOne","removeAllListeners","key","keys","ret","unwrapListeners","eventNames","Reflect","ownKeys","module","_onFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","process","title","setImmediate","_onFrame$1","callback","setTimeout","concat","slice","onFrame","func","removeFirst","array","item","idx","indexOf","splice","colorCache","hexToRGB","colorString","normalizedColor","replace","parts","match","r","parseInt","b","rgbToHex","rNum","gNum","bNum","toString","util","freeze","bind","_len","outerArgs","_key","_len2","innerArgs","_key2","extend","source","hasOwnProperty","mapValueInRange","value","fromLow","fromHigh","toLow","toHigh","MathUtil","interpolateColor","val","startColorStr","endColorStr","asRGB","startColor","endColor","Math","floor","degreesToRadians","deg","PI","radiansToDegrees","rad","tensionFromOrigamiValue","oValue","frictionFromOrigamiValue","OrigamiValueConverter","origamiValueFromTension","tension","origamiFromFriction","friction","classCallCheck","instance","Constructor","_extends","assign","AnimationLooper","springSystem","run","getSpringSystem","loop","Date","now","SimulationLooper","timestep","time","running","getIsIdle","SteppingSimulationLooper","step","Loopers","BouncyConversion","bounciness","speed","normalize","projectNormal","s","bouncyTension","bouncyFriction","quadraticOutInterpolation","b3Nobounce","startValue","endValue","start","end","linearInterpolation","t","b3Friction1","x","pow","b3Friction2","b3Friction3","SpringConfig","fromOrigamiTensionAndFriction","fromBouncinessAndSpeed","bouncyConversion","coastingConfigWithOrigamiFriction","DEFAULT_ORIGAMI_SPRING_CONFIG","PhysicsState","velocity","Spring","_startValue","_currentState","_displacementFromRestThreshold","_endValue","_overshootClampingEnabled","_previousState","_restSpeedThreshold","_tempState","_timeAccumulator","_wasAtRest","_id","_ID","_springSystem","destroy","deregisterSpring","getId","setSpringConfig","springConfig","_springConfig","getSpringConfig","setCurrentValue","currentValue","skipSetAtRest","setAtRest","notifyPositionUpdated","getStartValue","getCurrentValue","getCurrentDisplacementDistance","getDisplacementDistanceForState","state","abs","setEndValue","isAtRest","activateSpring","onChange","onSpringEndStateChange","getEndValue","setVelocity","getVelocity","setRestSpeedThreshold","restSpeedThreshold","getRestSpeedThreshold","setRestDisplacementThreshold","displacementFromRestThreshold","getRestDisplacementThreshold","setOvershootClampingEnabled","enabled","isOvershootClampingEnabled","isOvershooting","advance","realDeltaTime","adjustedDeltaTime","MAX_DELTA_TIME_SEC","tempPosition","tempVelocity","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","dVelocity","dvdt","SOLVER_TIMESTEP_SEC","_interpolate","notifyActivate","notifyAtRest","onSpringActivate","onSpringUpdate","onSpringAtRest","systemShouldAdvance","wasAtRest","alpha","getListeners","listenerToRemove","currentValueIsApproximately","SpringSystem","looper","_activeSprings","_idleSpringIndices","_isIdle","_lastTimeMillis","_springRegistry","setLooper","createSpring","createSpringWithConfig","createSpringWithBouncinessAndSpeed","spring","registerSpring","getSpringById","id","getAllSprings","vals","deltaTime","currentTimeMillis","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","springId","factory","extendStatics","__extends","d","setPrototypeOf","__proto__","p","__","constructor","__read","o","Symbol","iterator","ar","next","done","defineProperty","exports","HorizontalScroll","_super","_a","_b","_e","scrollAmount","scrollAmountStep","container","document","documentElement","_f","showScrollbars","_g","preventVerticalScroll","_this","observer","containerIsIntersecting","style","cssClass","round","random","blacklist","wheel","preventDefault","angle","atan2","deltaY","deltaX","forward","offset","sqrt","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","SCROLL_AMOUNT","distance","max","scrollLeft","scrollWidth","clientWidth","DOM_DELTA_PIXEL","keydown","body","includes","nodeName","toLowerCase","scrollValue","prevent","code","min","addEventListener","IntersectionObserver","entry","isIntersecting","observe","classList","add","createElement","head","appendChild","sheet","insertRule","webkitCss","rebound_1","currSpring","overscrollBehaviorY","overscrollBehaviorX","removeEventListener","remove","disconnect","events_1","[object Object]","setupUI","matchMedia","mq","widthChange","e1","e2","largeWindow","matches","smallWindow","horizontal"],"mappings":"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"}